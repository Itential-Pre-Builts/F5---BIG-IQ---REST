{
  "metadata": {
    "name": "@itentialopensource/f5-big-iq-rest",
    "version": "0.0.2",
    "description": "Project with workflows for F5 BIG-IQ using REST protocol for managing BIG-IP devices.",
    "license": "Apache-2.0",
    "repository": {
      "type": "gitlab",
      "hostname": "gitlab.com",
      "path": "itentialopensource/pre-built-automations"
    },
    "keywords": [
      "Itential",
      "IAP"
    ],
    "author": "Itential",
    "IAPDependencies": {
      "@itential/app-workflow_engine": "",
      "@itential/app-json_forms": "",
      "@itentialopensource/adapter-f5_bigiq": ""
    },
    "gitlabId": 50631276
  },
  "manifest": {
    "bundleName": "F5 - BIG-IQ - REST",
    "fingerprint": "650dc290163eb400c61225ac",
    "createdEpoch": "1695400592948",
    "artifacts": [
      {
        "id": "Upgrade BIG-IP Device - F5 - BIG-IQ",
        "name": "Upgrade BIG-IP Device - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Upgrade BIG-IP Device - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Retrieve iHealth Credentials Id - F5 - BIG-IQ",
        "name": "Retrieve iHealth Credentials Id - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Retrieve iHealth Credentials Id - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Retrieve Device MachineId - F5 - BIG-IQ",
        "name": "Retrieve Device MachineId - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Retrieve Device MachineId - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create iHealth Upload Task - F5 - BIG-IQ",
        "name": "Create iHealth Upload Task - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Create iHealth Upload Task - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create Device Backup - F5 - BIG-IQ",
        "name": "Create Device Backup - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Create Device Backup - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Run Script on BIG-IP Unmasked - F5 - BIG-IQ",
        "name": "Run Script on BIG-IP Unmasked - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Run Script on BIG-IP Unmasked - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Discover BIG-IP Device - F5 - BIG-IQ",
        "name": "Discover BIG-IP Device - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Discover BIG-IP Device - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Import BIG-IP Device - F5 - BIG-IQ",
        "name": "Import BIG-IP Device - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Import BIG-IP Device - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Run BIG-IP Upgrade - F5 - BIG-IQ",
        "name": "Run BIG-IP Upgrade - F5 - BIG-IQ",
        "type": "workflow",
        "location": "/bundles/workflows/Run BIG-IP Upgrade - F5 - BIG-IQ.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650c6c6b8f256f016dabc637",
        "name": "Create BIG-IP Upgrade Task Names",
        "type": "transformation",
        "location": "/bundles/transformations/Create BIG-IP Upgrade Task Names.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650c820b8f256f016dabc63a",
        "name": "Check Available Disk Space BIG-IP",
        "type": "transformation",
        "location": "/bundles/transformations/Check Available Disk Space BIG-IP.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650a81249b3b3a0148b40592",
        "name": "Search BIG-IQ iHealth Credentials",
        "type": "transformation",
        "location": "/bundles/transformations/Search BIG-IQ iHealth Credentials.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "64b846f740807f01aa8d2446",
        "name": "Build BIG-IQ Device Filter",
        "type": "transformation",
        "location": "/bundles/transformations/Build BIG-IQ Device Filter.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650db9fbb5c9df0151074b02",
        "name": "Query Machine Id and Active Volume",
        "type": "transformation",
        "location": "/bundles/transformations/Query Machine Id and Active Volume.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650af2719b3b3a0148b40593",
        "name": "Create iHealth Upload Task Input",
        "type": "transformation",
        "location": "/bundles/transformations/Create iHealth Upload Task Input.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650b03528f256f016dabc632",
        "name": "Create BIG-IQ Device Backup Input",
        "type": "transformation",
        "location": "/bundles/transformations/Create BIG-IQ Device Backup Input.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650b29cf8f256f016dabc633",
        "name": "Create Execute Script Input",
        "type": "transformation",
        "location": "/bundles/transformations/Create Execute Script Input.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650c5b428f256f016dabc635",
        "name": "Create BIG-IQ Device Discovery Input",
        "type": "transformation",
        "location": "/bundles/transformations/Create BIG-IQ Device Discovery Input.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650c60458f256f016dabc636",
        "name": "Create BIG-IQ Device Import Input",
        "type": "transformation",
        "location": "/bundles/transformations/Create BIG-IQ Device Import Input.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650c721e8f256f016dabc638",
        "name": "Create BIG-IP Software Upgrade Input",
        "type": "transformation",
        "location": "/bundles/transformations/Create BIG-IP Software Upgrade Input.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "650c74d68f256f016dabc639",
        "name": "Get Software Upgrade Task",
        "type": "transformation",
        "location": "/bundles/transformations/Get Software Upgrade Task.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "workflow",
      "data": {
        "name": "Upgrade BIG-IP Device - F5 - BIG-IQ",
        "tasks": {
          "3166": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Machine Id",
            "description": "Query machine Id of BIG-IP device to upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "machineId",
                "obj": "$var.035d.job_details"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -660,
              "y": -24
            }
          },
          "6737": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Retrieve iHealth Credentials Id",
            "description": "Retrieve iHealth credentials Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Retrieve iHealth Credentials Id - F5 - BIG-IQ",
                "variables": {
                  "filterValue": {
                    "task": "job",
                    "value": "credentialsFilterValue"
                  },
                  "filterProperty": {
                    "task": "job",
                    "value": "credentialsFilterProperty"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 0,
              "y": -24
            }
          },
          "8570": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Skip iHealth Task Upload",
            "description": "Skip iHealth task upload pre upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": -156
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1848,
              "y": -24
            },
            "x": 0,
            "y": 0.5
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 4056,
              "y": -24
            },
            "x": 1,
            "y": 0.5
          },
          "035d": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Retrieve BIG-IP Machine Id",
            "description": "Retrieve machine Id value of BIG-IP device to upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Retrieve Device MachineId - F5 - BIG-IQ",
                "variables": {
                  "filterProperty": {
                    "task": "job",
                    "value": "machineIdFilterProperty"
                  },
                  "filterValue": {
                    "task": "job",
                    "value": "machineIdFilterValue"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": -1272,
              "y": -24
            }
          },
          "2d47": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Credentials Id",
            "description": "Query credentials Id of account to associate upgrade with.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "credentialsId",
                "obj": "$var.6737.job_details"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 324,
              "y": -24
            }
          },
          "93ba": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create iHealth Upload Task Pre Upgrade",
            "description": "Create iHealth upload task pre upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create iHealth Upload Task - F5 - BIG-IQ",
                "variables": {
                  "credentialsId": {
                    "task": "2d47",
                    "value": "return_data"
                  },
                  "_id": {
                    "task": "static",
                    "value": ""
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "iHealthTaskName": {
                    "task": "c430",
                    "value": "iHealthTaskNamePreUpgrade"
                  },
                  "machineId": {
                    "task": "3166",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 648,
              "y": -24
            }
          },
          "ffd2": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Backup BIG-IP Device",
            "description": "Backup BIG-IP device",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create Device Backup - F5 - BIG-IQ",
                "variables": {
                  "machineId": {
                    "task": "3166",
                    "value": "return_data"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "_id": {
                    "task": "static",
                    "value": ""
                  },
                  "deviceBackupFileName": {
                    "task": "job",
                    "value": "deviceBackupFileName"
                  },
                  "deviceBackupLifeTime": {
                    "task": "job",
                    "value": "deviceBackupLifeTime"
                  },
                  "deviceBackupDescription": {
                    "task": "job",
                    "value": "deviceBackupDescription"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 960,
              "y": -24
            }
          },
          "324a": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Get Available Disk Space",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Run Script on BIG-IP Unmasked - F5 - BIG-IQ",
                "variables": {
                  "scriptTimeout": {
                    "task": "static",
                    "value": 30
                  },
                  "_id": {
                    "task": "static",
                    "value": ""
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "scriptName": {
                    "task": "static",
                    "value": "Get Available Disk Space"
                  },
                  "scriptDescription": {
                    "task": "static",
                    "value": "Gets available disk space"
                  },
                  "scriptContent": {
                    "task": "static",
                    "value": "vgdisplay --short"
                  },
                  "scriptExecutionName": {
                    "task": "static",
                    "value": "Run Get Available Disk Space"
                  },
                  "machineId": {
                    "task": "3166",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 1584,
              "y": -24
            }
          },
          "2af6": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Re-Activate License",
            "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Re-Activate License",
                "message": "Re-Activation of license is required before proceeding with rest of this job. \n\nUse the link below to navigate to page to re-activate device license. Note this should only be run during a maintenance window as re-activating the license will cause a reboot of the device.\n\nUpon completing re-activation of license, select \"Continue Job\". If error occurred re-activating license, select \"End Job\".\n",
                "body": "$var.c430.reactivateLicenseLink",
                "variables": "",
                "btn_success": "Continue Job",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1272,
              "y": -24
            }
          },
          "935a": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create iHealth Upload Task Post Upgrade",
            "description": "Create iHealth upload task post upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Create iHealth Upload Task - F5 - BIG-IQ",
                "variables": {
                  "credentialsId": {
                    "task": "2d47",
                    "value": "return_data"
                  },
                  "_id": {
                    "task": "static",
                    "value": ""
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "iHealthTaskName": {
                    "task": "c430",
                    "value": "iHealthTaskNamePostUpgrade"
                  },
                  "machineId": {
                    "task": "3166",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 3156,
              "y": -24
            }
          },
          "d2d0": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Discover BIG-IP Device",
            "description": "Discover BIG-IP device over BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Discover BIG-IP Device - F5 - BIG-IQ",
                "variables": {
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "_id": {
                    "task": "static",
                    "value": ""
                  },
                  "machineId": {
                    "task": "3166",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 3480,
              "y": -24
            }
          },
          "0f89": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Import BIG-IP Device",
            "description": "Import BIG-IP device over BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Import BIG-IP Device - F5 - BIG-IQ",
                "variables": {
                  "machineId": {
                    "task": "3166",
                    "value": "return_data"
                  },
                  "importDeviceTaskName": {
                    "task": "job",
                    "value": "importDeviceTaskName"
                  },
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "_id": {
                    "task": "static",
                    "value": ""
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 3804,
              "y": -24
            }
          },
          "c430": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create BIG-IP Upgrade Task Names",
            "description": "Create BIG-IP upgrade task names",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650c6c6b8f256f016dabc637",
                "variableMap": {
                  "iHealthTaskName": "$var.job.iHealthTaskName",
                  "deviceManagementAddress": "$var.job.deviceManagementAddress",
                  "deviceManagementPort": "$var.job.deviceManagementPort",
                  "deviceManagementHostname": "$var.job.deviceManagementHostname"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "iHealthTaskNamePreUpgrade": null,
                "iHealthTaskNamePostUpgrade": null,
                "reactivateLicenseLink": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -1596,
              "y": -24
            }
          },
          "52a9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1272,
              "y": 216
            }
          },
          "90d0": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 4056,
              "y": 216
            }
          },
          "b992": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Check Available Disk Space BIG-IP",
            "description": "Confirm enough disk space is available on BIG-IP device",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650c820b8f256f016dabc63a",
                "variableMap": {
                  "availableDiskResponse": "$var.324a.job_details"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "enoughDiskSpaceFree": null,
                "diskSpaceMessage": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1902,
              "y": -24
            }
          },
          "8c67": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check Enough Disk Space",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "b992",
                          "variable": "enoughDiskSpaceFree"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2199,
              "y": -24
            }
          },
          "71db": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Disk Space Usage",
            "description": "Display disk space usage",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Not Enough Disk Space for Upgrade",
                "message": "The amount of disk space found on BIG-IP device is not enough for a software upgrade. See amount of disk space found below. If possible to reformat disk for more space, do so and select \"Check Disk\" to check disk space again. If not possible, select \"End Job\" to end job.\n",
                "body": "$var.b992.diskSpaceMessage",
                "variables": "",
                "btn_success": "Check Disk",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 2196,
              "y": 96
            }
          },
          "417e": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2196,
              "y": 216
            }
          },
          "9bcd": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run BIG-IP Software Upgrade",
            "description": "Run BIG-IP software upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Run BIG-IP Upgrade - F5 - BIG-IQ",
                "variables": {
                  "adapterId": {
                    "task": "job",
                    "value": "adapterId"
                  },
                  "_id": {
                    "task": "static",
                    "value": ""
                  },
                  "softwareUpgradeTaskName": {
                    "task": "job",
                    "value": "softwareUpgradeTaskName"
                  },
                  "softwareImageName": {
                    "task": "job",
                    "value": "softwareImageName"
                  },
                  "targetVolume": {
                    "task": "job",
                    "value": "targetVolume"
                  },
                  "activeVolume": {
                    "task": "9e07",
                    "value": "return_data"
                  },
                  "machineId": {
                    "task": "3166",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": ""
              }
            },
            "actor": "job",
            "groups": [],
            "nodeLocation": {
              "x": 2508,
              "y": -24
            }
          },
          "5b34": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Uploading iHealth Task Pre Upgrade",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "uploadiHealthTask"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -336,
              "y": -24
            }
          },
          "61e8": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Skip iHealth Task Upload",
            "description": "Skip iHealth task upload pre upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -336,
              "y": -156
            }
          },
          "a58e": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Skip iHealth Task Upload",
            "description": "Skip iHealth task upload post upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 3156,
              "y": -144
            }
          },
          "91c6": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Uploading iHealth Task Post Upgrade",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "job",
                          "variable": "uploadiHealthTask"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": true
                        },
                        "operator": "==",
                        "query": "",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2832,
              "y": -24
            }
          },
          "9e07": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Active Volume",
            "description": "Query active volume of BIG-IP device to upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "activeVolume",
                "obj": "$var.035d.job_details"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -966,
              "y": -24
            }
          }
        },
        "transitions": {
          "3166": {
            "5b34": {
              "state": "success",
              "type": "standard"
            }
          },
          "6737": {
            "2d47": {
              "state": "success",
              "type": "standard"
            }
          },
          "8570": {
            "ffd2": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "c430": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "035d": {
            "9e07": {
              "state": "success",
              "type": "standard"
            }
          },
          "2d47": {
            "93ba": {
              "state": "success",
              "type": "standard"
            }
          },
          "93ba": {
            "ffd2": {
              "state": "success",
              "type": "standard"
            }
          },
          "ffd2": {
            "2af6": {
              "state": "success",
              "type": "standard"
            }
          },
          "324a": {
            "b992": {
              "state": "success",
              "type": "standard"
            }
          },
          "2af6": {
            "324a": {
              "state": "success",
              "type": "standard"
            },
            "52a9": {
              "type": "standard",
              "state": "failure"
            }
          },
          "935a": {
            "d2d0": {
              "state": "success",
              "type": "standard"
            }
          },
          "d2d0": {
            "0f89": {
              "state": "success",
              "type": "standard"
            }
          },
          "0f89": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "c430": {
            "035d": {
              "state": "success",
              "type": "standard"
            }
          },
          "52a9": {
            "417e": {
              "state": "success",
              "type": "standard"
            }
          },
          "90d0": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "b992": {
            "8c67": {
              "state": "success",
              "type": "standard"
            }
          },
          "8c67": {
            "71db": {
              "type": "standard",
              "state": "failure"
            },
            "9bcd": {
              "state": "success",
              "type": "standard"
            }
          },
          "71db": {
            "324a": {
              "state": "success",
              "type": "revert"
            },
            "417e": {
              "type": "standard",
              "state": "failure"
            }
          },
          "417e": {
            "90d0": {
              "state": "success",
              "type": "standard"
            }
          },
          "9bcd": {
            "91c6": {
              "state": "success",
              "type": "standard"
            }
          },
          "5b34": {
            "6737": {
              "state": "success",
              "type": "standard"
            },
            "61e8": {
              "type": "standard",
              "state": "failure"
            }
          },
          "61e8": {
            "8570": {
              "state": "success",
              "type": "standard"
            }
          },
          "a58e": {
            "d2d0": {
              "state": "success",
              "type": "standard"
            }
          },
          "91c6": {
            "a58e": {
              "state": "failure",
              "type": "standard"
            },
            "935a": {
              "state": "success",
              "type": "standard"
            }
          },
          "9e07": {
            "3166": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "credentialsFilterValue": {
              "$id": "filterValue",
              "type": "string"
            },
            "credentialsFilterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "machineIdFilterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "machineIdFilterValue": {
              "$id": "filterValue",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "deviceBackupFileName": {
              "$id": "deviceBackupFileName",
              "type": "string"
            },
            "deviceBackupLifeTime": {
              "$id": "deviceBackupLifeTime",
              "type": "integer",
              "examples": [
                30
              ]
            },
            "deviceBackupDescription": {
              "$id": "deviceBackupDescription",
              "type": "string"
            },
            "importDeviceTaskName": {
              "$id": "importDeviceTaskName",
              "type": "string"
            },
            "iHealthTaskName": {
              "$id": "iHealthTaskName",
              "type": "string",
              "examples": [
                "iHealthTaskName"
              ]
            },
            "deviceManagementAddress": {
              "$id": "deviceManagementAddress",
              "type": "string"
            },
            "deviceManagementPort": {
              "$id": "deviceManagementPort",
              "type": "string"
            },
            "deviceManagementHostname": {
              "$id": "deviceManagementHostname",
              "type": "string"
            },
            "softwareUpgradeTaskName": {
              "$id": "softwareUpgradeTaskName",
              "type": "string"
            },
            "softwareImageName": {
              "$id": "softwareImageName",
              "type": "string"
            },
            "targetVolume": {
              "$id": "targetVolume",
              "type": "string"
            },
            "uploadiHealthTask": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "credentialsFilterValue",
            "credentialsFilterProperty",
            "machineIdFilterProperty",
            "machineIdFilterValue",
            "adapterId",
            "deviceBackupFileName",
            "deviceBackupLifeTime",
            "deviceBackupDescription",
            "importDeviceTaskName",
            "iHealthTaskName",
            "deviceManagementAddress",
            "deviceManagementPort",
            "deviceManagementHostname",
            "softwareUpgradeTaskName",
            "softwareImageName",
            "targetVolume",
            "uploadiHealthTask"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "credentialsFilterValue": {
              "$id": "filterValue",
              "type": "string"
            },
            "credentialsFilterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "machineIdFilterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "machineIdFilterValue": {
              "$id": "filterValue",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "deviceBackupFileName": {
              "$id": "deviceBackupFileName",
              "type": "string"
            },
            "deviceBackupLifeTime": {
              "$id": "deviceBackupLifeTime",
              "type": "integer",
              "examples": [
                30
              ]
            },
            "deviceBackupDescription": {
              "$id": "deviceBackupDescription",
              "type": "string"
            },
            "importDeviceTaskName": {
              "$id": "importDeviceTaskName",
              "type": "string"
            },
            "iHealthTaskName": {
              "$id": "iHealthTaskName",
              "type": "string",
              "examples": [
                "iHealthTaskName"
              ]
            },
            "deviceManagementAddress": {
              "$id": "deviceManagementAddress",
              "type": "string"
            },
            "deviceManagementPort": {
              "$id": "deviceManagementPort",
              "type": "string"
            },
            "deviceManagementHostname": {
              "$id": "deviceManagementHostname",
              "type": "string"
            },
            "softwareUpgradeTaskName": {
              "$id": "softwareUpgradeTaskName",
              "type": "string"
            },
            "softwareImageName": {
              "$id": "softwareImageName",
              "type": "string"
            },
            "targetVolume": {
              "$id": "targetVolume",
              "type": "string"
            },
            "uploadiHealthTask": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "canvasVersion": 3,
        "type": "automation",
        "font_size": 12,
        "errorHandler": null,
        "preAutomationTime": 0,
        "sla": 0,
        "last_updated": "2023-09-22T16:24:40.266Z",
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "created": "2023-09-20T17:55:55.770Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "createdVersion": "5.46.0-2023.1.19.0",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Retrieve iHealth Credentials Id - F5 - BIG-IQ",
        "description": "Retrieve device machine ID with filter inputs provided",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": 12,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 972,
              "y": 996
            }
          },
          "dba3": {
            "name": "retrieveBIGIPiHealthCredentials",
            "canvasName": "retrieveBIGIPiHealthCredentials",
            "summary": "Retrieve BIG-IP iHealth Credentials",
            "description": "Retrieve BIG-IP iHealth Credentials",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "filter": "",
                "adapter_id": "F5-BIG-IQ"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError",
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 288,
              "y": 996
            }
          },
          "fcce": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Search BIG-IQ iHealth Credentials",
            "description": "Search for BIG-IQ iHealth credential Id with filter",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650a81249b3b3a0148b40592",
                "variableMap": {
                  "result": "$var.dba3.result",
                  "filterProperty": "$var.job.filterProperty",
                  "filterValue": "$var.job.filterValue"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "credentialsId": "$var.job.credentialsId"
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 648,
              "y": 996
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "dba3": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "dba3": {
            "fcce": {
              "state": "success",
              "type": "standard"
            }
          },
          "fcce": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "filterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "filterValue": {
              "$id": "filterValue",
              "type": "string"
            }
          },
          "required": [
            "filterProperty",
            "filterValue"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "filterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "filterValue": {
              "$id": "filterValue",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "credentialsId": {
              "$id": "credentialsId",
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.15.0",
        "createdVersion": "5.46.0-2023.1.15.0",
        "preAutomationTime": 0,
        "sla": 0,
        "canvasVersion": 1.5,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated": "2023-09-20T05:31:58.660Z",
        "created": "2023-09-20T05:09:23.341Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Retrieve Device MachineId - F5 - BIG-IQ",
        "description": "Retrieve device machine ID with filter inputs provided",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": -24,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 1176,
              "y": 996
            }
          },
          "1cc9": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Build BIG-IQ Device Filter",
            "description": "Builds filter to search for device by property and value equal to property",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "64b846f740807f01aa8d2446",
                "variableMap": {
                  "filterProperty": "$var.job.filterProperty",
                  "filterValue": "$var.job.filterValue"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "deviceFilter": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.06010518407212622,
            "y": 0.5055487053020962,
            "task_name": "Build Hostname Filter",
            "retrySettings": null,
            "nodeLocation": {
              "x": 228,
              "y": 996
            }
          },
          "f15b": {
            "name": "getResolveMachineId",
            "canvasName": "getResolveMachineId",
            "summary": "Retrieve Machine Id",
            "description": "Resolve machineId given device filter",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5BigIQ",
            "variables": {
              "incoming": {
                "filter": "$var.1cc9.deviceFilter",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.BIGIQError",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.19682151589242053,
            "y": 0.4883148831488315,
            "scheduled": false,
            "nodeLocation": {
              "x": 552,
              "y": 996
            }
          },
          "4b7d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Query Machine Id and Active Volume",
            "description": "Query machine Id and active volume of BIG-IP device to upgrade",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650db9fbb5c9df0151074b02",
                "variableMap": {
                  "foundMachine": "$var.f15b.result"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "machineId": "$var.job.machineId",
                "activeVolume": "$var.job.activeVolume"
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.06010518407212622,
            "y": 0.5055487053020962,
            "task_name": "Build Hostname Filter",
            "retrySettings": null,
            "nodeLocation": {
              "x": 900,
              "y": 996
            }
          }
        },
        "transitions": {
          "workflow_start": {
            "1cc9": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "1cc9": {
            "f15b": {
              "type": "standard",
              "state": "success"
            }
          },
          "f15b": {
            "4b7d": {
              "state": "success",
              "type": "standard"
            }
          },
          "4b7d": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "filterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "filterValue": {
              "$id": "filterValue",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "filterProperty",
            "filterValue",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "filterProperty": {
              "$id": "filterProperty",
              "type": "string"
            },
            "filterValue": {
              "$id": "filterValue",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "activeVolume": {
              "$id": "activeVolume",
              "type": "string"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "last_updated": "2023-09-22T16:04:40.174Z",
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "created": "2023-07-19T20:20:09.772Z",
        "createdVersion": "5.40.5-2021.1.72.0",
        "preAutomationTime": 0,
        "sla": 0,
        "canvasVersion": 1.5,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create iHealth Upload Task - F5 - BIG-IQ",
        "description": "Create iHealth upload task",
        "tasks": {
          "1692": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2148,
              "y": 1368
            }
          },
          "8388": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Delay and Query iHealth Task Status",
            "description": "Delay and query iHealth task status",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "queryTaskStatus",
                "minutes": 1,
                "attempts": 10
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1104
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": -60,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 2148,
              "y": 996
            }
          },
          "f70d": {
            "name": "createBIGIPiHealthUploadTask",
            "canvasName": "createBIGIPiHealthUploadTask",
            "summary": "Create BIG-IP iHealth Upload Task",
            "description": "Create BIG-IP iHealth Upload Task",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "body": "$var.2c87.iHealthTaskInput",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 540,
              "y": 996
            }
          },
          "2c87": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create iHealth Upload Task Input",
            "description": "Creates input for iHealth upload task in BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650af2719b3b3a0148b40593",
                "variableMap": {
                  "iHealthTaskName": "$var.job.iHealthTaskName",
                  "machineId": "$var.job.machineId",
                  "credentialsId": "$var.job.credentialsId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "iHealthTaskInput": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 204,
              "y": 996
            }
          },
          "1d60": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query iHealth Task Id",
            "description": "Query iHealth task Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.id",
                "obj": "$var.f70d.result"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 876,
              "y": 996
            }
          },
          "714d": {
            "name": "queryUploadTaskStatus",
            "canvasName": "queryUploadTaskStatus",
            "summary": "Get iHealth Upload Task Status",
            "description": "Get iHealth Upload Task Status",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "iHealthUploadTaskId": "$var.1d60.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.createiHealthTaskResponse"
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1212,
              "y": 996
            }
          },
          "62ed": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Upload Task Failed",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "714d",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FAILED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 996
            }
          },
          "ff7c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed to Create iHealth Upload Task",
                "message": "Failed to create the iHealth upload task, see error response. Select \"End Job\" to end this job.",
                "body": "$var.714d.result",
                "variables": "",
                "btn_success": "End Job",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 1236
            }
          },
          "c704": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Upload Task Finished",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "714d",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FINISHED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 996
            }
          },
          "15b4": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Number of Reattempts Exceeded",
                "message": "The number of reattempts to query iHealth task status exceeded expected number of reattempts. Select \"Query Task\" to query again or select \"End Job\" to end the job.\n\nSee query task response below.\n",
                "body": "$var.714d.result",
                "variables": "",
                "btn_success": "Query Task",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1236
            }
          },
          "9ea3": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1716,
              "y": 1368
            }
          },
          "9e84": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Error Result",
            "description": "Show failure result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed to Create iHealth Upload Task",
                "message": "Failed to create the iHealth upload task, see error response. Select \"Retry\" to retry call to create iHealth upload task or select \"End Job\" to end this job.\n",
                "body": "$var.f70d.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 540,
              "y": 1236
            }
          },
          "4e62": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 864,
              "y": 1368
            }
          },
          "5c4a": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Error Result",
            "description": "Show failure result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed to Get iHealth Upload Task Status",
                "message": "Failed to get the iHealth upload task status, see error response below. Select \"Retry\" to retry call to get iHealth upload task status or select \"End Job\" to end this job.\n",
                "body": "$var.714d.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1212,
              "y": 1236
            }
          }
        },
        "transitions": {
          "1692": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "8388": {
            "714d": {
              "state": "success",
              "type": "revert"
            },
            "15b4": {
              "type": "standard",
              "state": "error"
            }
          },
          "workflow_start": {
            "2c87": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "f70d": {
            "1d60": {
              "state": "success",
              "type": "standard"
            },
            "9e84": {
              "type": "standard",
              "state": "error"
            }
          },
          "2c87": {
            "f70d": {
              "state": "success",
              "type": "standard"
            }
          },
          "1d60": {
            "714d": {
              "state": "success",
              "type": "standard"
            }
          },
          "714d": {
            "62ed": {
              "state": "success",
              "type": "standard"
            },
            "5c4a": {
              "type": "standard",
              "state": "error"
            }
          },
          "62ed": {
            "ff7c": {
              "type": "standard",
              "state": "success"
            },
            "c704": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ff7c": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "c704": {
            "8388": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "15b4": {
            "9ea3": {
              "type": "standard",
              "state": "failure"
            },
            "714d": {
              "state": "success",
              "type": "revert"
            }
          },
          "9ea3": {
            "1692": {
              "state": "success",
              "type": "standard"
            }
          },
          "9e84": {
            "4e62": {
              "type": "standard",
              "state": "failure"
            },
            "f70d": {
              "state": "success",
              "type": "revert"
            }
          },
          "4e62": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "5c4a": {
            "714d": {
              "state": "success",
              "type": "revert"
            },
            "4e62": {
              "type": "standard",
              "state": "failure"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": [
                "test"
              ]
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "iHealthTaskName": {
              "$id": "iHealthTaskName",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "credentialsId": {
              "$id": "credentialsId",
              "type": "string"
            }
          },
          "required": [
            "_id",
            "adapterId",
            "iHealthTaskName",
            "machineId",
            "credentialsId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "iHealthTaskName": {
              "$id": "iHealthTaskName",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "credentialsId": {
              "$id": "credentialsId",
              "type": "string"
            },
            "initiator": {
              "type": "string"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "createiHealthTaskResponse": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "createdVersion": "5.46.0-2023.1.15.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated": "2023-09-20T20:46:50.265Z",
        "created": "2023-09-20T13:19:21.052Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Create Device Backup - F5 - BIG-IQ",
        "description": "Create iHealth upload task",
        "tasks": {
          "1692": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2160,
              "y": 1368
            }
          },
          "2288": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 864,
              "y": 1368
            }
          },
          "4687": {
            "name": "queryBackupTaskStatus",
            "canvasName": "queryBackupTaskStatus",
            "summary": "Query Backup Task Status",
            "description": "Query backup task status",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "backupTaskId": "$var.1d60.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.backupTaskResponse"
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1188,
              "y": 996
            }
          },
          "8388": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Delay and Query Device Backup Task Status",
            "description": "Delay and query device backup task status",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "queryTaskStatus",
                "minutes": 1,
                "attempts": 10
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1116
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": -96,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 2160,
              "y": 996
            }
          },
          "1d60": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Backup Device Task Id",
            "description": "Query backup device task Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.id",
                "obj": "$var.7edb.result"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 852,
              "y": 996
            }
          },
          "62ed": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Backup Task Failed",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "4687",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FAILED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 996
            }
          },
          "ff7c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Backup Device Task Failed",
                "message": "Failed to backup the device, see error response below. Select \"End Job\" to end this job.\n",
                "body": "$var.4687.result",
                "variables": "",
                "btn_success": "End Job",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 1236
            }
          },
          "c704": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Backup Device Task Finished",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "4687",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FINISHED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 996
            }
          },
          "15b4": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Number of Reattempts Exceeded",
                "message": "The number of reattempts to query device backup task status exceeded expected number of reattempts. Select \"Query Task\" to query again or select \"End Job\" to end the job.\n\nSee query task response below.\n",
                "body": "$var.4687.result",
                "variables": "",
                "btn_success": "Query Task",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1236
            }
          },
          "9ea3": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1716,
              "y": 1368
            }
          },
          "7edb": {
            "name": "generateBackupofDevice",
            "canvasName": "generateBackupofDevice",
            "summary": "Generate Backup of Device",
            "description": "Generate Backup of Device",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "body": "$var.1c3e.deviceBackupInput",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 996
            }
          },
          "1c3e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create BIG-IQ Device Backup Input",
            "description": "Create input for device backup over BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650b03528f256f016dabc632",
                "variableMap": {
                  "deviceBackupFileName": "$var.job.deviceBackupFileName",
                  "deviceBackupLifeTime": "$var.job.deviceBackupLifeTime",
                  "deviceBackupDescription": "$var.job.deviceBackupDescription",
                  "machineId": "$var.job.machineId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "deviceBackupInput": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 192,
              "y": 996
            }
          },
          "f580": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Generating Backup of Device Failed",
                "message": "Failed to backup the device, see error response below. Select \"Retry\" to retry call to backup the device or select \"End Job\" to end this job.\n",
                "body": "$var.7edb.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 1236
            }
          },
          "6d6e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Getting Backup Task Status Failed",
                "message": "Failed to get task status of backup of the device. See error response below. Select \"Retry\" to retry call to get task status of backup of device or select \"End Job\" to end this job.\n",
                "body": "$var.4687.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1188,
              "y": 1236
            }
          }
        },
        "transitions": {
          "1692": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "2288": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "4687": {
            "62ed": {
              "state": "success",
              "type": "standard"
            },
            "6d6e": {
              "type": "standard",
              "state": "error"
            }
          },
          "8388": {
            "4687": {
              "state": "success",
              "type": "revert"
            },
            "15b4": {
              "type": "standard",
              "state": "error"
            }
          },
          "workflow_start": {
            "1c3e": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "1d60": {
            "4687": {
              "state": "success",
              "type": "standard"
            }
          },
          "62ed": {
            "ff7c": {
              "type": "standard",
              "state": "success"
            },
            "c704": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ff7c": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "c704": {
            "8388": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "15b4": {
            "4687": {
              "state": "success",
              "type": "revert"
            },
            "9ea3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "9ea3": {
            "1692": {
              "state": "success",
              "type": "standard"
            }
          },
          "7edb": {
            "1d60": {
              "state": "success",
              "type": "standard"
            },
            "f580": {
              "type": "standard",
              "state": "error"
            }
          },
          "1c3e": {
            "7edb": {
              "state": "success",
              "type": "standard"
            }
          },
          "f580": {
            "2288": {
              "type": "standard",
              "state": "failure"
            },
            "7edb": {
              "state": "success",
              "type": "revert"
            }
          },
          "6d6e": {
            "2288": {
              "type": "standard",
              "state": "failure"
            },
            "4687": {
              "state": "success",
              "type": "revert"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": [
                "test"
              ]
            },
            "deviceBackupFileName": {
              "$id": "deviceBackupFileName",
              "type": "string"
            },
            "deviceBackupLifeTime": {
              "$id": "deviceBackupLifeTime",
              "type": "integer",
              "examples": [
                30
              ]
            },
            "deviceBackupDescription": {
              "$id": "deviceBackupDescription",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            }
          },
          "required": [
            "adapterId",
            "_id",
            "deviceBackupFileName",
            "deviceBackupLifeTime",
            "deviceBackupDescription",
            "machineId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "deviceBackupFileName": {
              "$id": "deviceBackupFileName",
              "type": "string"
            },
            "deviceBackupLifeTime": {
              "$id": "deviceBackupLifeTime",
              "type": "integer",
              "examples": [
                30
              ]
            },
            "deviceBackupDescription": {
              "$id": "deviceBackupDescription",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "initiator": {
              "type": "string"
            },
            "backupTaskResponse": {
              "title": "result",
              "type": "object"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "createdVersion": "5.46.0-2023.1.19.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated": "2023-09-20T20:45:15.315Z",
        "created": "2023-09-20T14:28:07.192Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Run Script on BIG-IP Unmasked - F5 - BIG-IQ",
        "description": "Creates, executes, and gets result of script run on target BIG-IP over BIG-IQ with unmasked values",
        "tasks": {
          "1692": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2484,
              "y": 1368
            }
          },
          "8388": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Delay and Query Script Status",
            "description": "Delay and query script status",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "queryScriptStatus",
                "minutes": 1,
                "attempts": 10
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2208,
              "y": 1104
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": -372,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 2484,
              "y": 996
            }
          },
          "62ed": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Script Failed",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "6b06",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FAILED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 996
            }
          },
          "ff7c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failure Running Script",
                "message": "Failed to run script, see error response. Select \"End Job\" to end this job.",
                "body": "$var.6b06.result",
                "variables": "",
                "btn_success": "End Job",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1236
            }
          },
          "c704": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Script Finished",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "6b06",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FINISHED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2208,
              "y": 996
            }
          },
          "15b4": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Number of Reattempts Exceeded",
                "message": "The number of reattempts to query script status exceeded expected number of reattempts. Select \"Query Status\" to query status again or select \"End Job\" to end the job.\n\nSee query script response below.\n",
                "body": "$var.6b06.result",
                "variables": "",
                "btn_success": "Query Status",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 2208,
              "y": 1224
            }
          },
          "9ea3": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2052,
              "y": 1368
            }
          },
          "9e84": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Error Result",
            "description": "Show failure result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed to Create Script",
                "message": "Failed to create script, see error response. Select \"Retry\" to retry call to create script or select \"End Job\" to end this job.\n",
                "body": "",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 204,
              "y": 1224
            }
          },
          "4e62": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 204,
              "y": 1368
            }
          },
          "5c4a": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Error Result",
            "description": "Show failure result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed to Get Script Status",
                "message": "Failed to get the script status, see error response below. Select \"Retry\" to retry call to get script status or select \"End Job\" to end this job.\n",
                "body": "$var.6b06.result",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1524,
              "y": 1236
            }
          },
          "9ab2": {
            "name": "createaBIGIPscript",
            "canvasName": "createaBIGIPscript",
            "summary": "Create Script on BIG-IP",
            "description": "Create script on BIG-IP",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "body": "$var.47e5.merged_object",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 204,
              "y": 996
            }
          },
          "2e0e": {
            "name": "executeaBIGIPscript",
            "canvasName": "executeaBIGIPscript",
            "summary": "Execute a BIG-IP script",
            "description": "Execute a BIG-IP script",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "body": "$var.9e41.executeScriptInput",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 888,
              "y": 996
            }
          },
          "47e5": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Create Input to Create Script in BIG-IQ",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "scriptName"
                    }
                  },
                  {
                    "key": "description",
                    "value": {
                      "task": "job",
                      "variable": "scriptDescription"
                    }
                  },
                  {
                    "key": "script",
                    "value": {
                      "task": "job",
                      "variable": "scriptContent"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -108,
              "y": 996
            }
          },
          "9e41": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Execute Script Input",
            "description": "Creates input to execute a script over BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650b29cf8f256f016dabc633",
                "variableMap": {
                  "machineId": "$var.job.machineId",
                  "scriptExecutionName": "$var.job.scriptExecutionName",
                  "scriptTimeout": "$var.job.scriptTimeout",
                  "createScriptResult": "$var.9ab2.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "executeScriptInput": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 552,
              "y": 996
            }
          },
          "be9b": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 984,
              "y": 1368
            }
          },
          "b65d": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Error Result",
            "description": "Show failure result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed to Execute Script",
                "message": "Failed to execute script, see error response below. Select \"Retry\" to retry call to execute script or select \"End Job\" to end this job.\n",
                "body": "$var.2e0e.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 888,
              "y": 1236
            }
          },
          "a8ed": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Script Task Id",
            "description": "Query script task Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.id",
                "obj": "$var.2e0e.result"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1194,
              "y": 996
            }
          },
          "6b06": {
            "name": "queryBIGIPscriptstatus",
            "canvasName": "queryBIGIPscriptstatus",
            "summary": "Get Script Status",
            "description": "Get script status from BIG-IQ",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "scriptTaskId": "$var.a8ed.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.scriptResult"
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1524,
              "y": 996
            }
          }
        },
        "transitions": {
          "1692": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "8388": {
            "15b4": {
              "type": "standard",
              "state": "error"
            },
            "6b06": {
              "state": "success",
              "type": "revert"
            }
          },
          "workflow_start": {
            "47e5": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "62ed": {
            "ff7c": {
              "type": "standard",
              "state": "success"
            },
            "c704": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ff7c": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "c704": {
            "8388": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "15b4": {
            "9ea3": {
              "type": "standard",
              "state": "failure"
            },
            "6b06": {
              "state": "success",
              "type": "revert"
            }
          },
          "9ea3": {
            "1692": {
              "state": "success",
              "type": "standard"
            }
          },
          "9e84": {
            "9ab2": {
              "state": "success",
              "type": "revert"
            },
            "4e62": {
              "type": "standard",
              "state": "failure"
            }
          },
          "4e62": {
            "be9b": {
              "state": "success",
              "type": "standard"
            }
          },
          "5c4a": {
            "be9b": {
              "type": "standard",
              "state": "failure"
            }
          },
          "9ab2": {
            "9e84": {
              "type": "standard",
              "state": "error"
            },
            "9e41": {
              "state": "success",
              "type": "standard"
            }
          },
          "2e0e": {
            "b65d": {
              "type": "standard",
              "state": "error"
            },
            "a8ed": {
              "state": "success",
              "type": "standard"
            }
          },
          "47e5": {
            "9ab2": {
              "state": "success",
              "type": "standard"
            }
          },
          "9e41": {
            "2e0e": {
              "state": "success",
              "type": "standard"
            }
          },
          "be9b": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "b65d": {
            "2e0e": {
              "state": "success",
              "type": "revert"
            },
            "be9b": {
              "type": "standard",
              "state": "failure"
            }
          },
          "a8ed": {
            "6b06": {
              "state": "success",
              "type": "standard"
            }
          },
          "6b06": {
            "62ed": {
              "state": "success",
              "type": "standard"
            },
            "5c4a": {
              "type": "standard",
              "state": "error"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": [
                "test"
              ]
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scriptName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scriptDescription": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scriptContent": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "scriptExecutionName": {
              "$id": "scriptExecutionName",
              "type": "string"
            },
            "scriptTimeout": {
              "$id": "scriptTimeout",
              "type": "integer",
              "examples": [
                30
              ]
            }
          },
          "required": [
            "_id",
            "adapterId",
            "scriptName",
            "scriptDescription",
            "scriptContent",
            "machineId",
            "scriptExecutionName",
            "scriptTimeout"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scriptName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scriptDescription": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scriptContent": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "scriptExecutionName": {
              "$id": "scriptExecutionName",
              "type": "string"
            },
            "scriptTimeout": {
              "$id": "scriptTimeout",
              "type": "integer",
              "examples": [
                30
              ]
            },
            "initiator": {
              "type": "string"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scriptResult": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "createdVersion": "5.46.0-2023.1.19.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "last_updated": "2023-09-20T20:47:51.603Z",
        "created": "2023-09-20T16:53:15.851Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Discover BIG-IP Device - F5 - BIG-IQ",
        "description": "Discover BIG-IP device over BIG-IQ",
        "tasks": {
          "1692": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2160,
              "y": 1368
            }
          },
          "2288": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 864,
              "y": 1368
            }
          },
          "8388": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Delay and Query Device Discovery Task Status",
            "description": "Delay and query device backup task status",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "queryTaskStatus",
                "minutes": 1,
                "attempts": 10
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1116
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": -96,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 2160,
              "y": 996
            }
          },
          "1d60": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Device Rediscover Task Id",
            "description": "Query device rediscover task Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.id",
                "obj": "$var.0267.result"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 852,
              "y": 996
            }
          },
          "62ed": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Discovery Task Failed",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "6a9b",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FAILED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 996
            }
          },
          "ff7c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Device Discovery Task Failed",
                "message": "Failed device discovery, see error response below. Select \"End Job\" to end this job.\n",
                "body": "$var.62ed.return_value",
                "variables": "",
                "btn_success": "End Job",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 1236
            }
          },
          "c704": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Discovery Task Finished",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "6a9b",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FINISHED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 996
            }
          },
          "15b4": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Number of Reattempts Exceeded",
                "message": "The number of reattempts to query device discovery task status exceeded expected number of reattempts. Select \"Query Task\" to query again or select \"End Job\" to end the job.\n\nSee query task response below.\n",
                "body": "$var.6a9b.result",
                "variables": "",
                "btn_success": "Query Task",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1236
            }
          },
          "9ea3": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1716,
              "y": 1368
            }
          },
          "1c3e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create BIG-IQ Device Discovery Input",
            "description": "Create input for device backup over BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650c5b428f256f016dabc635",
                "variableMap": {
                  "machineId": "$var.job.machineId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "deviceDiscoveryInput": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 192,
              "y": 996
            }
          },
          "f580": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Device Discovery Failed",
                "message": "Failed to discover device, see error response below. Select \"Retry\" to retry call to discover device or select \"End Job\" to end this job.\n",
                "body": "$var.0267.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 1236
            }
          },
          "6d6e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Getting Device Discovery Task Status Failed",
                "message": "Failed to get task status of device discovery. See error response below. Select \"Retry\" to retry call to get task status of device discovery or select \"End Job\" to end this job.\n",
                "body": "$var.6a9b.result",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1188,
              "y": 1236
            }
          },
          "0267": {
            "name": "postDeviceDiscovery",
            "canvasName": "postDeviceDiscovery",
            "summary": "Perform BIG-IP Device Discovery",
            "description": "Perform BIG-IP device discovery over BIG-IQ",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "body": "$var.1c3e.deviceDiscoveryInput",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 996
            }
          },
          "6a9b": {
            "name": "getDeviceDiscoveryTask",
            "canvasName": "getDeviceDiscoveryTask",
            "summary": "Get Device Discovery Task",
            "description": "Get device discovery task",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "objectId": "$var.1d60.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deviceDiscoveryResult"
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1188,
              "y": 996
            }
          }
        },
        "transitions": {
          "1692": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "2288": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "8388": {
            "15b4": {
              "type": "standard",
              "state": "error"
            },
            "6a9b": {
              "state": "success",
              "type": "revert"
            }
          },
          "workflow_start": {
            "1c3e": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "1d60": {
            "6a9b": {
              "state": "success",
              "type": "standard"
            }
          },
          "62ed": {
            "ff7c": {
              "type": "standard",
              "state": "success"
            },
            "c704": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ff7c": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "c704": {
            "8388": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "15b4": {
            "9ea3": {
              "type": "standard",
              "state": "failure"
            },
            "6a9b": {
              "state": "success",
              "type": "revert"
            }
          },
          "9ea3": {
            "1692": {
              "state": "success",
              "type": "standard"
            }
          },
          "1c3e": {
            "0267": {
              "state": "success",
              "type": "standard"
            }
          },
          "f580": {
            "2288": {
              "type": "standard",
              "state": "failure"
            },
            "0267": {
              "state": "success",
              "type": "revert"
            }
          },
          "6d6e": {
            "2288": {
              "type": "standard",
              "state": "failure"
            },
            "6a9b": {
              "state": "success",
              "type": "revert"
            }
          },
          "0267": {
            "1d60": {
              "state": "success",
              "type": "standard"
            },
            "f580": {
              "type": "standard",
              "state": "error"
            }
          },
          "6a9b": {
            "62ed": {
              "state": "success",
              "type": "standard"
            },
            "6d6e": {
              "type": "standard",
              "state": "error"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": [
                "test"
              ]
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "_id",
            "machineId",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "initiator": {
              "type": "string"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "deviceDiscoveryResult": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "createdVersion": "5.46.0-2023.1.19.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "last_updated": "2023-09-21T16:01:46.279Z",
        "created": "2023-09-21T14:50:23.517Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Import BIG-IP Device - F5 - BIG-IQ",
        "description": "Create iHealth upload task",
        "tasks": {
          "1692": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2160,
              "y": 1368
            }
          },
          "2288": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 864,
              "y": 1368
            }
          },
          "2947": {
            "name": "performBIGIPDeviceImportusingmachineId",
            "canvasName": "performBIGIPDeviceImportusingmachineId",
            "summary": "Import BIG-IP Device",
            "description": "Perform BIG-IP Device Import using machineId",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "body": "$var.1c3e.deviceImportInput",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 996
            }
          },
          "8388": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Delay and Query Device Import Task Status",
            "description": "Delay and query device backup task status",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "queryTaskStatus",
                "minutes": 1,
                "attempts": 10
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1104
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": -96,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 2160,
              "y": 996
            }
          },
          "1d60": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Device Import Task Id",
            "description": "Query device import task Id",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.id",
                "obj": "$var.2947.result"
              },
              "outgoing": {
                "return_data": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 852,
              "y": 996
            }
          },
          "62ed": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Import Task Failed",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "1a74",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FAILED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 996
            }
          },
          "ff7c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Device Import Task Failed",
                "message": "Failed device import, see error response below. Select \"End Job\" to end this job.\n",
                "body": "$var.1a74.result",
                "variables": "",
                "btn_success": "End Job",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 1236
            }
          },
          "c704": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Import Task Finished",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "1a74",
                          "variable": "result"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FINISHED"
                        },
                        "operator": "==",
                        "query": "response.status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 996
            }
          },
          "15b4": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Number of Reattempts Exceeded",
                "message": "The number of reattempts to query device import task status exceeded expected number of reattempts. Select \"Query Task\" to query again or select \"End Job\" to end the job.\n\nSee query task response below.\n",
                "body": "$var.1a74.result",
                "variables": "",
                "btn_success": "Query Task",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1236
            }
          },
          "9ea3": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1716,
              "y": 1368
            }
          },
          "1c3e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create BIG-IQ Device Import Input",
            "description": "Create input for device backup over BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650c60458f256f016dabc636",
                "variableMap": {
                  "importDeviceTaskName": "$var.job.importDeviceTaskName",
                  "machineId": "$var.job.machineId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "deviceImportInput": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 192,
              "y": 996
            }
          },
          "f580": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Performing Device Import Failed",
                "message": "Failed to import the device, see error response below. Select \"Retry\" to retry call to import device or select \"End Job\" to end this job.\n",
                "body": "$var.2947.error",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 1236
            }
          },
          "6d6e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Getting Device Import Task Status Failed",
                "message": "Failed to get task status of device import. See error response below. Select \"Retry\" to retry call to get task status of device import or select \"End Job\" to end this job.\n",
                "body": "$var.1a74.result",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1200,
              "y": 1236
            }
          },
          "1a74": {
            "name": "monitorImportTask",
            "canvasName": "monitorImportTask",
            "summary": "Get Device Import Task",
            "description": "Get device import task status",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "deviceImportId": "$var.1d60.return_data",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": "$var.job.deviceImportResult"
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1200,
              "y": 996
            }
          }
        },
        "transitions": {
          "1692": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "2288": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "2947": {
            "1d60": {
              "state": "success",
              "type": "standard"
            },
            "f580": {
              "type": "standard",
              "state": "error"
            }
          },
          "8388": {
            "15b4": {
              "type": "standard",
              "state": "error"
            },
            "1a74": {
              "state": "success",
              "type": "revert"
            }
          },
          "workflow_start": {
            "1c3e": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "1d60": {
            "1a74": {
              "state": "success",
              "type": "standard"
            }
          },
          "62ed": {
            "ff7c": {
              "type": "standard",
              "state": "success"
            },
            "c704": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ff7c": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "c704": {
            "8388": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "15b4": {
            "9ea3": {
              "type": "standard",
              "state": "failure"
            },
            "1a74": {
              "state": "success",
              "type": "revert"
            }
          },
          "9ea3": {
            "1692": {
              "state": "success",
              "type": "standard"
            }
          },
          "1c3e": {
            "2947": {
              "state": "success",
              "type": "standard"
            }
          },
          "f580": {
            "2288": {
              "type": "standard",
              "state": "failure"
            },
            "2947": {
              "state": "success",
              "type": "revert"
            }
          },
          "6d6e": {
            "2288": {
              "type": "standard",
              "state": "failure"
            },
            "1a74": {
              "state": "success",
              "type": "revert"
            }
          },
          "1a74": {
            "62ed": {
              "state": "success",
              "type": "standard"
            },
            "6d6e": {
              "type": "standard",
              "state": "error"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": [
                "test"
              ]
            },
            "importDeviceTaskName": {
              "$id": "importDeviceTaskName",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            }
          },
          "required": [
            "adapterId",
            "_id",
            "importDeviceTaskName",
            "machineId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "importDeviceTaskName": {
              "$id": "importDeviceTaskName",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "initiator": {
              "type": "string"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "deviceImportResult": {
              "title": "result",
              "type": "object"
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "createdVersion": "5.46.0-2023.1.19.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "last_updated": "2023-09-21T15:40:18.925Z",
        "created": "2023-09-21T15:13:03.753Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Run BIG-IP Upgrade - F5 - BIG-IQ",
        "description": "Discover BIG-IP device over BIG-IQ",
        "tasks": {
          "1692": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 2160,
              "y": 1368
            }
          },
          "2053": {
            "name": "retrievaallUpgradeTasks",
            "canvasName": "retrievaallUpgradeTasks",
            "summary": "Retrieve all upgrade tasks",
            "description": "Retrieve all upgrade tasks",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "adapter_id": "F5-BIG-IQ"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 864,
              "y": 996
            }
          },
          "2288": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 672,
              "y": 1368
            }
          },
          "8388": {
            "name": "reattempt",
            "canvasName": "reattempt",
            "summary": "Delay and Query Software Upgrade Task Status",
            "description": "Delay and query device backup task status",
            "location": "Application",
            "locationType": null,
            "app": "MOP",
            "type": "automatic",
            "displayName": "MOP",
            "variables": {
              "incoming": {
                "job_id": "$var.job._id",
                "attemptID": "queryTaskStatus",
                "minutes": 1,
                "attempts": 10
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1116
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.05709992486851991,
            "y": 0.5006165228113441,
            "nodeLocation": {
              "x": -96,
              "y": 996
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3569682151589242,
            "y": 0.4981549815498155,
            "nodeLocation": {
              "x": 2160,
              "y": 996
            }
          },
          "62ed": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Software Upgrade Task Failed",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "a421",
                          "variable": "currentSoftwareUpgradeTask"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FAILED"
                        },
                        "operator": "==",
                        "query": "status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 996
            }
          },
          "ff7c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Software Upgrade Task Failed",
                "message": "Failed software upgrade, see error response below. Select \"End Job\" to end this job.\n",
                "body": "$var.a421.currentSoftwareUpgradeTask",
                "variables": "",
                "btn_success": "End Job",
                "btn_failure": ""
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1536,
              "y": 1236
            }
          },
          "c704": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check If Device Discovery Task Finished",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "operand_1": {
                          "task": "a421",
                          "variable": "currentSoftwareUpgradeTask"
                        },
                        "operand_2": {
                          "task": "static",
                          "variable": "FINISHED"
                        },
                        "operator": "==",
                        "query": "status",
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 996
            }
          },
          "15b4": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Failure Result",
            "description": "Show failure result and option for next step",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Number of Reattempts Exceeded",
                "message": "The number of reattempts to query software upgrade task status exceeded expected number of reattempts. Select \"Query Task\" to query again or select \"End Job\" to end the job.\n\nSee query task response below.\n",
                "body": "$var.a421.currentSoftwareUpgradeTask",
                "variables": "",
                "btn_success": "Query Task",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 1872,
              "y": 1236
            }
          },
          "9ea3": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1716,
              "y": 1368
            }
          },
          "1c3e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create BIG-IP Software Upgrade Input",
            "description": "Create input for device backup over BIG-IQ",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650c721e8f256f016dabc638",
                "variableMap": {
                  "softwareUpgradeTaskName": "$var.job.softwareUpgradeTaskName",
                  "softwareImageName": "$var.job.softwareImageName",
                  "targetVolume": "$var.job.targetVolume",
                  "activeVolume": "$var.job.activeVolume",
                  "machineId": "$var.job.machineId"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "softwareUpgradeInput": null
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 168,
              "y": 996
            }
          },
          "f580": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Device Discovery Failed",
                "message": "Failed to discover device, see error response below. Select \"Retry\" to retry call to discover device or select \"End Job\" to end this job.\n",
                "body": "",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 1236
            }
          },
          "6d6e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show BIG-IQ Error",
            "description": "Show error result and options for next steps",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Getting Software Upgrade Task Status Failed",
                "message": "Failed to get task status of software upgrade. See error response below. Select \"Retry\" to retry call to get task status of software upgrade or select \"End Job\" to end this job.\n",
                "body": "",
                "variables": "",
                "btn_success": "Retry",
                "btn_failure": "End Job"
              },
              "outgoing": {}
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "nodeLocation": {
              "x": 864,
              "y": 1236
            }
          },
          "a073": {
            "name": "performSoftwareUpgrade",
            "canvasName": "performSoftwareUpgrade",
            "summary": "Perform BIG-IP Software Upgrade",
            "description": "Perform BIG-IP software upgrade",
            "location": "Adapter",
            "locationType": "F5BigIQ",
            "app": "F5BigIQ",
            "type": "automatic",
            "displayName": "F5-BIG-IQ",
            "variables": {
              "incoming": {
                "body": "$var.1c3e.softwareUpgradeInput",
                "adapter_id": "$var.job.adapterId"
              },
              "outgoing": {
                "result": ""
              },
              "error": "$var.job.BIGIQError"
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 516,
              "y": 996
            }
          },
          "a421": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Get Software Upgrade Task",
            "description": "Get current software upgrade task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "650c74d68f256f016dabc639",
                "variableMap": {
                  "softwareUpgradeTasks": "$var.2053.result",
                  "startSoftwareUpgradeResponse": "$var.a073.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "currentSoftwareUpgradeTask": "$var.job.softwareUpgradeResult"
              },
              "decorators": []
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": 1188,
              "y": 996
            }
          }
        },
        "transitions": {
          "1692": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "2053": {
            "a421": {
              "state": "success",
              "type": "standard"
            },
            "6d6e": {
              "type": "standard",
              "state": "error"
            }
          },
          "2288": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "8388": {
            "2053": {
              "state": "success",
              "type": "revert"
            },
            "15b4": {
              "type": "standard",
              "state": "error"
            }
          },
          "workflow_start": {
            "1c3e": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "62ed": {
            "ff7c": {
              "type": "standard",
              "state": "success"
            },
            "c704": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ff7c": {
            "9ea3": {
              "state": "success",
              "type": "standard"
            }
          },
          "c704": {
            "8388": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          },
          "15b4": {
            "2053": {
              "state": "success",
              "type": "revert"
            },
            "9ea3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "9ea3": {
            "1692": {
              "state": "success",
              "type": "standard"
            }
          },
          "1c3e": {
            "a073": {
              "state": "success",
              "type": "standard"
            }
          },
          "f580": {
            "2288": {
              "type": "standard",
              "state": "failure"
            },
            "a073": {
              "state": "success",
              "type": "revert"
            }
          },
          "6d6e": {
            "2053": {
              "state": "success",
              "type": "revert"
            },
            "2288": {
              "type": "standard",
              "state": "failure"
            }
          },
          "a073": {
            "2053": {
              "state": "success",
              "type": "standard"
            },
            "f580": {
              "type": "standard",
              "state": "error"
            }
          },
          "a421": {
            "62ed": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "title": "job_id",
              "type": "string",
              "examples": [
                "test"
              ]
            },
            "softwareUpgradeTaskName": {
              "$id": "softwareUpgradeTaskName",
              "type": "string"
            },
            "softwareImageName": {
              "$id": "softwareImageName",
              "type": "string"
            },
            "targetVolume": {
              "$id": "targetVolume",
              "type": "string"
            },
            "activeVolume": {
              "$id": "activeVolume",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "_id",
            "softwareUpgradeTaskName",
            "softwareImageName",
            "targetVolume",
            "activeVolume",
            "machineId",
            "adapterId"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "softwareUpgradeTaskName": {
              "$id": "softwareUpgradeTaskName",
              "type": "string"
            },
            "softwareImageName": {
              "$id": "softwareImageName",
              "type": "string"
            },
            "targetVolume": {
              "$id": "targetVolume",
              "type": "string"
            },
            "activeVolume": {
              "$id": "activeVolume",
              "type": "string"
            },
            "machineId": {
              "$id": "machineId",
              "type": "string"
            },
            "adapterId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "initiator": {
              "type": "string"
            },
            "BIGIQError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "softwareUpgradeResult": {
              "$id": "currentSoftwareUpgradeTask",
              "type": "object",
              "properties": {},
              "required": []
            }
          }
        },
        "type": "automation",
        "font_size": 12,
        "lastUpdatedVersion": "5.46.0-2023.1.19.0",
        "createdVersion": "5.46.0-2023.1.19.0",
        "preAutomationTime": 0,
        "sla": 0,
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "canvasVersion": 1.5,
        "last_updated": "2023-09-21T21:15:14.611Z",
        "created": "2023-09-21T16:30:45.577Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650c6c6b8f256f016dabc637",
        "name": "Create BIG-IP Upgrade Task Names",
        "description": "Create task names for BIG-IP upgrade over BIG-IQ",
        "incoming": [
          {
            "$id": "iHealthTaskName",
            "type": "string",
            "examples": [
              "iHealthTaskName"
            ]
          },
          {
            "$id": "deviceManagementAddress",
            "type": "string"
          },
          {
            "$id": "deviceManagementPort",
            "type": "string"
          },
          {
            "$id": "deviceManagementHostname",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "iHealthTaskNamePreUpgrade",
            "type": "string",
            "examples": [
              "iHealthTask-Pre-Upgrade"
            ]
          },
          {
            "$id": "iHealthTaskNamePostUpgrade",
            "type": "string",
            "examples": [
              "iHealthTask-Post-Upgrade"
            ]
          },
          {
            "$id": "reactivateLicenseLink",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "iHealthTaskName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "iHealthTaskName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceManagementAddress",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 7,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceManagementPort",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 7,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceManagementHostname",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 12,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceManagementHostname",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 19,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "${iHealthTaskName}-Pre-Upgrade",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "${iHealthTaskName}-Post-Upgrade",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://${deviceManagementHostname}/tmui/Control/jspmap/tmui/system/licensing/license.jsp?",
            "args": [
              null
            ],
            "view": {
              "row": 4,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 19,
            "type": "method",
            "library": "String",
            "method": "length",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://${deviceManagementAddress}:${deviceManagementPort}/tmui/Control/jspmap/tmui/system/licensing/license.jsp?",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 19,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 15,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 12,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "method",
            "library": "Equality",
            "method": "equality",
            "args": [
              null,
              0
            ],
            "view": {
              "row": 3,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 15,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 3,
              "col": 4
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "iHealthTaskNamePostUpgrade",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "iHealthTaskNamePreUpgrade",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "reactivateLicenseLink",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2023-09-21T16:16:43.326Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-22T16:23:54.961Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650c820b8f256f016dabc63a",
        "name": "Check Available Disk Space BIG-IP",
        "description": "Confirm enough disk space is available on BIG-IP device",
        "incoming": [
          {
            "$id": "availableDiskResponse",
            "type": "object",
            "properties": {
              "scriptResult": {
                "type": "object",
                "properties": {
                  "response": {
                    "type": "object",
                    "properties": {
                      "userScriptTaskStatuses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "output": {
                              "type": "string",
                              "examples": [
                                "  \"vg-db-vda\" 39.79 GiB [27.30 GiB used / 12.49 GiB free]\n"
                              ]
                            }
                          },
                          "required": []
                        }
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "enoughDiskSpaceFree",
            "type": "boolean",
            "examples": [
              true,
              false
            ]
          },
          {
            "$id": "diskSpaceMessage",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "availableDiskResponse",
              "ptr": "/scriptResult/response/userScriptTaskStatuses"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "declaration",
            "library": "RegExp",
            "method": "new RegExp",
            "args": [
              "\\/.*free",
              "gm"
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "pop",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return/value"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "output"
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "RegExp",
            "method": "exec",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 10,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "method",
            "library": "Array",
            "method": "pop",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 10,
              "ptr": "/return/value"
            },
            "to": {
              "location": "method",
              "name": 12,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "method",
            "library": "String",
            "method": "split",
            "args": [
              null,
              " ",
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 12,
              "ptr": "/return"
            },
            "to": {
              "location": "function",
              "name": 15,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "function",
            "function": "checkIfEnoughDiskSpace",
            "args": [
              null
            ],
            "view": {
              "row": 4,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 15,
              "ptr": "/return/isEnoughDiskSpace"
            },
            "to": {
              "location": "outgoing",
              "name": "enoughDiskSpaceFree",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 15,
              "ptr": "/return/diskMessage"
            },
            "to": {
              "location": "outgoing",
              "name": "diskSpaceMessage",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "amountDiskFree",
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "/",
                    "12.49",
                    "GiB",
                    "free"
                  ]
                }
              }
            ],
            "outgoing": [
              {
                "$id": "isEnoughDiskSpace",
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              {
                "$id": "diskMessage",
                "type": "string"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "amountDiskFree",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "amountDiskFree",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "getIndex",
                "args": [
                  null,
                  1
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "method",
                "library": "Array",
                "method": "getIndex",
                "args": [
                  null,
                  2
                ],
                "view": {
                  "row": 2,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "template",
                  "name": 15,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "template",
                  "name": 15,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "GiB"
                ],
                "view": {
                  "row": 2,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 9,
                "type": "method",
                "library": "Relational",
                "method": "greaterThanOrEqual",
                "args": [
                  null,
                  15
                ],
                "view": {
                  "row": 1,
                  "col": 3
                },
                "context": "#"
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 15,
                "type": "template",
                "library": "String",
                "method": "templateLiteral",
                "template": "Disk has ${amount} ${measure} free. Disk must have at least 15 GiB free.",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 4
                },
                "context": "#"
              },
              {
                "id": 11,
                "type": "method",
                "library": "Logical",
                "method": "and",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                },
                "context": "#"
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "template",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "diskMessage",
                  "ptr": ""
                },
                "context": "#"
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "isEnoughDiskSpace",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "checkIfEnoughDiskSpace",
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "checkIfEnoughDiskSpace",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2023-09-21T17:48:59.784Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-21T18:03:23.727Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650a81249b3b3a0148b40592",
        "name": "Search BIG-IQ iHealth Credentials",
        "description": "Search BIG-IQ iHealth Credentials",
        "incoming": [
          {
            "$id": "result",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "e444dc72-2d47-3a4c-ba67-a0977e8057b5"
                          ],
                          "format": "uuid"
                        },
                        "kind": {
                          "type": "string",
                          "examples": [
                            "cm:device:ihealth:credentials:ihealthcredentialsstate"
                          ]
                        },
                        "selfLink": {
                          "type": "string",
                          "examples": [
                            "https://localhost/mgmt/cm/device/ihealth/credentials/e444dc72-2d47-3a4c-ba67-a0977e8057b5"
                          ]
                        },
                        "username": {
                          "type": "string",
                          "examples": [
                            "0oaw1pdk3zXZSOQmb357"
                          ]
                        },
                        "generation": {
                          "type": "integer",
                          "examples": [
                            1
                          ]
                        },
                        "description": {
                          "type": "string",
                          "examples": [
                            "iHealth account for testing"
                          ]
                        },
                        "displayName": {
                          "type": "string",
                          "examples": [
                            "Chris Calloway iHealth"
                          ]
                        },
                        "lastUpdateMicros": {
                          "type": "integer",
                          "examples": [
                            1695068791280016
                          ]
                        },
                        "encryptedPassword": {
                          "type": "string",
                          "examples": [
                            "tniRZJ5R8B3h9D5EWSzHA9quANie/xxFE/L8VItlurxiXfuv1ioAUIJrsb9Px6DeGh9dbNb9t5canXM/WpT0YrYGKN5Hg1P3acu7truJjo4pgLUP4lqxMpBlcK+qJFcb"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "filterProperty",
            "type": "string"
          },
          {
            "$id": "filterValue",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "credentialsId",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filterProperty",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filterValue",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/3/value"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "result",
              "ptr": "/response/items"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "find",
            "args": [
              null,
              "findCredentials",
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 5,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "method",
            "library": "Logical",
            "method": "nullish",
            "args": [
              null,
              {
                "id": "Not Found"
              }
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "id"
            ],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "credentialsId",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "e444dc72-2d47-3a4c-ba67-a0977e8057b5"
                    ],
                    "format": "uuid"
                  },
                  "kind": {
                    "type": "string",
                    "examples": [
                      "cm:device:ihealth:credentials:ihealthcredentialsstate"
                    ]
                  },
                  "selfLink": {
                    "type": "string",
                    "examples": [
                      "https://localhost/mgmt/cm/device/ihealth/credentials/e444dc72-2d47-3a4c-ba67-a0977e8057b5"
                    ]
                  },
                  "username": {
                    "type": "string",
                    "examples": [
                      "0oaw1pdk3zXZSOQmb357"
                    ]
                  },
                  "generation": {
                    "type": "integer",
                    "examples": [
                      1
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "iHealth account for testing"
                    ]
                  },
                  "displayName": {
                    "type": "string",
                    "examples": [
                      "Chris Calloway iHealth"
                    ]
                  },
                  "lastUpdateMicros": {
                    "type": "integer",
                    "examples": [
                      1695068791280016
                    ]
                  },
                  "encryptedPassword": {
                    "type": "string",
                    "examples": [
                      "tniRZJ5R8B3h9D5EWSzHA9quANie/xxFE/L8VItlurxiXfuv1ioAUIJrsb9Px6DeGh9dbNb9t5canXM/WpT0YrYGKN5Hg1P3acu7truJjo4pgLUP4lqxMpBlcK+qJFcb"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "examples": [
                        "e444dc72-2d47-3a4c-ba67-a0977e8057b5"
                      ],
                      "format": "uuid"
                    },
                    "kind": {
                      "type": "string",
                      "examples": [
                        "cm:device:ihealth:credentials:ihealthcredentialsstate"
                      ]
                    },
                    "selfLink": {
                      "type": "string",
                      "examples": [
                        "https://localhost/mgmt/cm/device/ihealth/credentials/e444dc72-2d47-3a4c-ba67-a0977e8057b5"
                      ]
                    },
                    "username": {
                      "type": "string",
                      "examples": [
                        "0oaw1pdk3zXZSOQmb357"
                      ]
                    },
                    "generation": {
                      "type": "integer",
                      "examples": [
                        1
                      ]
                    },
                    "description": {
                      "type": "string",
                      "examples": [
                        "iHealth account for testing"
                      ]
                    },
                    "displayName": {
                      "type": "string",
                      "examples": [
                        "Chris Calloway iHealth"
                      ]
                    },
                    "lastUpdateMicros": {
                      "type": "integer",
                      "examples": [
                        1695068791280016
                      ]
                    },
                    "encryptedPassword": {
                      "type": "string",
                      "examples": [
                        "tniRZJ5R8B3h9D5EWSzHA9quANie/xxFE/L8VItlurxiXfuv1ioAUIJrsb9Px6DeGh9dbNb9t5canXM/WpT0YrYGKN5Hg1P3acu7truJjo4pgLUP4lqxMpBlcK+qJFcb"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_filterProperty": {
                    "$id": "filterProperty",
                    "type": "string"
                  },
                  "1_filterValue": {
                    "$id": "filterValue",
                    "type": "string"
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_filterProperty"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_filterValue"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "findCredentials",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "findCredentials",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2023-09-20T05:20:36.021Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-20T05:30:54.166Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.8",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "64b846f740807f01aa8d2446",
        "name": "Build BIG-IQ Device Filter",
        "description": "Builds filter to search for device by property and value equal to property",
        "incoming": [
          {
            "$id": "filterProperty",
            "type": "string"
          },
          {
            "$id": "filterValue",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "deviceFilter",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filterProperty",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filterValue",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "('${property}'+eq+'${value}')",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceFilter",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-09-20T04:49:23.662Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-20T05:04:21.272Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.8",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650db9fbb5c9df0151074b02",
        "name": "Query Machine Id and Active Volume",
        "description": "Query machine Id and active volume of BIG-IP to upgrade",
        "incoming": [
          {
            "$id": "foundMachine",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "machineId": {
                          "type": "string",
                          "examples": [
                            "b14fc503-0fa0-4597-9042-cb43809b50e5"
                          ],
                          "format": "uuid"
                        },
                        "slots": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "volume": {
                                "type": "string",
                                "examples": [
                                  "HD1.1"
                                ]
                              },
                              "product": {
                                "type": "string",
                                "examples": [
                                  "BIG-IP"
                                ]
                              },
                              "version": {
                                "type": "string",
                                "examples": [
                                  "14.1.5.4"
                                ],
                                "format": "ipv4"
                              },
                              "build": {
                                "type": "string",
                                "examples": [
                                  "0.0.2"
                                ]
                              },
                              "isActive": {
                                "type": "boolean",
                                "examples": [
                                  true,
                                  false
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "machineId",
            "type": "string"
          },
          {
            "$id": "activeVolume",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "foundMachine",
              "ptr": "/response/items"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "pop",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return/value"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return/value"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "machineId"
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "slots"
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "find",
            "args": [
              null,
              "findActiveSlot"
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 10,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "volume"
            ],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "machineId",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "activeVolume",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  true
                ],
                "view": {
                  "row": 2,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "isActive"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "findActiveSlot",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "findActiveSlot",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2023-09-22T15:59:55.554Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-22T16:03:44.901Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650af2719b3b3a0148b40593",
        "name": "Create iHealth Upload Task Input",
        "description": "Creates input for iHealth upload task in BIG-IQ",
        "incoming": [
          {
            "$id": "iHealthTaskName",
            "type": "string"
          },
          {
            "$id": "machineId",
            "type": "string"
          },
          {
            "$id": "credentialsId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "iHealthTaskInput",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "name"
                ]
              },
              "deviceReferences": {
                "type": "array"
              },
              "credentialsReference": {
                "type": "object",
                "properties": {},
                "required": []
              },
              "uploadLocalQkView": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "iHealthTaskName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "iHealthTaskInput",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "machineId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "credentialsId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [
              false
            ],
            "view": {
              "row": 3,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/shared/resolver/device-groups/cm-bigip-allBigIpDevices/devices/${machineId}",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/cm/device/ihealth/credentials/${credentialsId}",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 5,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 9,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "iHealthTaskInput",
              "ptr": "/uploadLocalQkView"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "iHealthTaskInput",
              "ptr": "/credentialsReference"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 9,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "iHealthTaskInput",
              "ptr": "/deviceReferences"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2023-09-20T13:24:01.156Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-20T13:34:32.312Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.8",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650b03528f256f016dabc632",
        "name": "Create BIG-IQ Device Backup Input",
        "description": "Create input for device backup over BIG-IQ",
        "incoming": [
          {
            "$id": "deviceBackupFileName",
            "type": "string"
          },
          {
            "$id": "deviceBackupLifeTime",
            "type": "integer",
            "examples": [
              30
            ]
          },
          {
            "$id": "deviceBackupDescription",
            "type": "string"
          },
          {
            "$id": "machineId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "deviceBackupInput",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "testing-task.ucs"
                ]
              },
              "includePrivateKeys": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "isEncrypted": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "deviceReference": {
                "type": "object",
                "properties": {},
                "required": []
              },
              "backupLifeTime": {
                "type": "integer",
                "examples": [
                  2
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "Test backup of device from api"
                ]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/shared/resolver/device-groups/cm-bigip-allBigIpDevices/devices/${machineId}",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "machineId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 2,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceBackupFileName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceBackupInput",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [
              false
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [
              true
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceBackupInput",
              "ptr": "/isEncrypted"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceBackupInput",
              "ptr": "/includePrivateKeys"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceBackupInput",
              "ptr": "/deviceReference"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceBackupDescription",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceBackupInput",
              "ptr": "/description"
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceBackupLifeTime",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceBackupInput",
              "ptr": "/backupLifeTime"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-09-20T14:36:02.405Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-20T14:43:26.719Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650b29cf8f256f016dabc633",
        "name": "Create Execute Script Input",
        "description": "Creates input to execute a script over BIG-IQ",
        "incoming": [
          {
            "$id": "machineId",
            "type": "string"
          },
          {
            "$id": "scriptExecutionName",
            "type": "string"
          },
          {
            "$id": "scriptTimeout",
            "type": "integer",
            "examples": [
              30
            ]
          },
          {
            "$id": "createScriptResult",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "b0e491cf-6a65-452e-9da0-1bf077f546c1"
                    ],
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "test 1"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "test script"
                    ]
                  },
                  "script": {
                    "type": "string",
                    "examples": [
                      "tmsh show sys"
                    ]
                  },
                  "generation": {
                    "type": "integer",
                    "examples": [
                      1
                    ]
                  },
                  "lastUpdateMicros": {
                    "type": "integer",
                    "examples": [
                      1695230797774835
                    ]
                  },
                  "kind": {
                    "type": "string",
                    "examples": [
                      "shared:user-scripts:userscriptstate"
                    ]
                  },
                  "selfLink": {
                    "type": "string",
                    "examples": [
                      "https://localhost/mgmt/shared/user-scripts/id"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "executeScriptInput",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "name"
                ]
              },
              "deviceReferences": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {},
                  "required": []
                }
              },
              "timeout": {
                "type": "integer",
                "examples": [
                  30
                ]
              },
              "scriptReference": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "scriptExecutionName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "executeScriptInput",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "scriptTimeout",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "executeScriptInput",
              "ptr": "/timeout"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "machineId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "createScriptResult",
              "ptr": "/response/selfLink"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/shared/resolver/device-groups/cm-bigip-allBigIpDevices/devices/${machineId}",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 5,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "executeScriptInput",
              "ptr": "/scriptReference"
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "executeScriptInput",
              "ptr": "/deviceReferences"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2023-09-20T17:20:15.987Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-20T17:32:54.438Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650c5b428f256f016dabc635",
        "name": "Create BIG-IQ Device Discovery Input",
        "description": "Create input for device discovery over BIG-IQ",
        "incoming": [
          {
            "$id": "machineId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "deviceDiscoveryInput",
            "type": "object",
            "properties": {
              "deviceReference": {
                "type": "object",
                "properties": {},
                "required": []
              },
              "moduleList": {
                "type": "array"
              },
              "status": {
                "type": "string",
                "examples": [
                  "STARTED"
                ]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "machineId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 2,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "STARTED"
            ],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "module": "adc_core"
              }
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/cm/system/machineid-resolver/${machineId}",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 8,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 1,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceDiscoveryInput",
              "ptr": "/status"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceDiscoveryInput",
              "ptr": "/moduleList"
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceDiscoveryInput",
              "ptr": "/deviceReference"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-09-21T15:03:30.599Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-21T15:06:24.360Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650c60458f256f016dabc636",
        "name": "Create BIG-IQ Device Import Input",
        "description": "Creates input for BIG-IQ device import",
        "incoming": [
          {
            "$id": "importDeviceTaskName",
            "type": "string"
          },
          {
            "$id": "machineId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "deviceImportInput",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "rediscover_adc_core"
                ]
              },
              "conflictPolicy": {
                "type": "string",
                "examples": [
                  "USE_BIGIQ"
                ]
              },
              "deviceReference": {
                "type": "object",
                "properties": {},
                "required": []
              },
              "failImportOnConflict": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "moduleList": {
                "type": "array"
              },
              "status": {
                "type": "string",
                "examples": [
                  "STARTED"
                ]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "importDeviceTaskName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceImportInput",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "machineId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "STARTED"
            ],
            "view": {
              "row": 4,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "module": "adc_core"
              }
            ],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "USE_BIGIQ"
            ],
            "view": {
              "row": 1,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [
              true
            ],
            "view": {
              "row": 2,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/cm/system/machineid-resolver/${machineId}",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "declaration",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceImportInput",
              "ptr": "/conflictPolicy"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceImportInput",
              "ptr": "/status"
            },
            "context": "#"
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 15,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceImportInput",
              "ptr": "/failImportOnConflict"
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceImportInput",
              "ptr": "/moduleList"
            },
            "context": "#"
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceImportInput",
              "ptr": "/deviceReference"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2023-09-21T15:24:53.740Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-21T15:31:21.499Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650c721e8f256f016dabc638",
        "name": "Create BIG-IP Software Upgrade Input",
        "description": "Create input for BIG-IP software upgrade over BIG-IQ",
        "incoming": [
          {
            "$id": "softwareUpgradeTaskName",
            "type": "string"
          },
          {
            "$id": "softwareImageName",
            "type": "string"
          },
          {
            "$id": "targetVolume",
            "type": "string"
          },
          {
            "$id": "activeVolume",
            "type": "string"
          },
          {
            "$id": "machineId",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "softwareUpgradeInput",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "serialUpgradeTest1"
                ]
              },
              "softwareImageReference": {
                "type": "object",
                "properties": {},
                "required": []
              },
              "stopForBackups": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "stopBeforeInstall": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "stopBeforeReboot": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "stopToReview": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "serialMode": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "stopForAssessments": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "selectByDevice": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "deviceInput": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "deviceReference": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    },
                    "targetVolume": {
                      "type": "string",
                      "examples": [
                        "HD1.2"
                      ]
                    },
                    "active": {
                      "type": "string",
                      "examples": [
                        "HD1.1"
                      ]
                    }
                  },
                  "required": []
                }
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "softwareUpgradeTaskName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "softwareImageName",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "machineId",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 3,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [
              false
            ],
            "view": {
              "row": 2,
              "col": 4
            },
            "context": "#"
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "targetVolume",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 8,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "activeVolume",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 8,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/cm/autodeploy/software-images/${softwareImageName}",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 3,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "https://localhost/mgmt/shared/resolver/device-groups/cm-bigip-allBigIpDevices/devices/${machineId}",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 6,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 22,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {
                "link": ""
              },
              "link",
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "function",
              "name": 8,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 8,
            "type": "function",
            "function": "createDeviceInput",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 8,
              "ptr": "/return/deviceInputObject"
            },
            "to": {
              "location": "declaration",
              "name": 12,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 4
            },
            "context": "#",
            "polymorphIndex": 0
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/stopForBackups"
            },
            "context": "#"
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/stopBeforeInstall"
            },
            "context": "#"
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/stopBeforeReboot"
            },
            "context": "#"
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/stopToReview"
            },
            "context": "#"
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/serialMode"
            },
            "context": "#"
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/stopForAssessments"
            },
            "context": "#"
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/selectByDevice"
            },
            "context": "#"
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/softwareImageReference"
            },
            "context": "#"
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 12,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "softwareUpgradeInput",
              "ptr": "/deviceInput"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "deviceReferenceLink",
                "type": "object",
                "properties": {},
                "required": []
              },
              {
                "$id": "targetVolume",
                "type": "string"
              },
              {
                "$id": "activeVolume",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "deviceInputObject",
                "type": "object",
                "properties": {
                  "deviceReference": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  },
                  "targetVolume": {
                    "type": "string",
                    "examples": [
                      "HD1.2"
                    ]
                  },
                  "active": {
                    "type": "string",
                    "examples": [
                      "HD1.1"
                    ]
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "deviceReferenceLink",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "deviceInputObject",
                  "ptr": "/deviceReference"
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "targetVolume",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "deviceInputObject",
                  "ptr": "/targetVolume"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "activeVolume",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "deviceInputObject",
                  "ptr": "/active"
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "createDeviceInput",
            "view": {
              "col": 0,
              "row": 4
            },
            "id": "createDeviceInput",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2023-09-21T16:41:02.168Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-21T16:50:49.956Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "650c74d68f256f016dabc639",
        "name": "Get Software Upgrade Task",
        "description": "Get software upgrade task",
        "incoming": [
          {
            "$id": "softwareUpgradeTasks",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "28219010-bbf9-4ea8-acd7-3069736b00a9"
                          ],
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "serialUpgradeTest"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "examples": [
                            "FINISHED"
                          ]
                        },
                        "currentStep": {
                          "type": "string",
                          "examples": [
                            "WAITING_TO_START"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "startSoftwareUpgradeResponse",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "edb16ff2-852b-4b62-a660-32ee5df302f8"
                    ],
                    "format": "uuid"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "currentSoftwareUpgradeTask",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "softwareUpgradeTasks",
              "ptr": "/response/items"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "startSoftwareUpgradeResponse",
              "ptr": "/response/id"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "find",
            "args": [
              null,
              "findSoftwareUpgradeTask",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "currentSoftwareUpgradeTask",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "28219010-bbf9-4ea8-acd7-3069736b00a9"
                    ],
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "serialUpgradeTest"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "examples": [
                      "FINISHED"
                    ]
                  },
                  "currentStep": {
                    "type": "string",
                    "examples": [
                      "WAITING_TO_START"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "examples": [
                        "28219010-bbf9-4ea8-acd7-3069736b00a9"
                      ],
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "serialUpgradeTest"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "examples": [
                        "FINISHED"
                      ]
                    },
                    "currentStep": {
                      "type": "string",
                      "examples": [
                        "WAITING_TO_START"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_id": {
                    "type": "string",
                    "examples": [
                      "edb16ff2-852b-4b62-a660-32ee5df302f8"
                    ],
                    "format": "uuid"
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_id"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "findSoftwareUpgradeTask",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "findSoftwareUpgradeTask",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-09-21T16:52:38.802Z",
        "createdBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-09-21T17:11:03.613Z",
        "lastUpdatedBy": {
          "_id": "6463eeecee404876a5626a1a",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "4.1.2-2023.1.10",
        "tags": []
      }
    }
  ],
  "readme": "# F5 - BIG-IQ - REST\n\n## Overview\n\nProject with workflows for F5 BIG-IQ using REST protocol for managing BIG-IP devices.\n\n\n<a href='https://gitlab.com/itentialopensource/pre-built-automations/staging/f5-big-iq-rest/-/blob/master/documentation/Upgrade BIG-IP Device - F5 - BIG-IQ.md' target='_blank'>Upgrade BIG-IP Device - F5 - BIG-IQ</a>\n\n\n\n## External Dependencies\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>OS Version</th>\n      <th>API Version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>F5 BIG-IQ</td>\n      <td>8.3</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n\n## Adapters\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>adapter-f5_bigiq</td>\n      <td>^0.3.3</td>\n    </tr>\n  </tbody>\n</table>"
}